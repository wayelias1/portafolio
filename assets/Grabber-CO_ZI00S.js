import{Grab as f}from"./index-DfNT68bL.js";import{g as v}from"./CanvasUtils-DL62Im12.js";import{n as y,t as k,K as L,a7 as O,a8 as h,S as C}from"./index-CcR1OWpM.js";import{E as w}from"./ExternalInteractorBase-CIi3zRdK.js";import"./OptionsColor-DlmgYyDr.js";const D=0;function E(r,t,i,n,e,o){v(r,i,n),r.strokeStyle=y(e,o),r.lineWidth=t,r.stroke()}function M(r,t,i,n,e){r.canvas.draw(o=>{const s=t.getPosition();E(o,t.retina.linksWidth??D,s,e,i,n)})}const G="grab",P=0,q=0;class x extends w{constructor(t){super(t)}clear(){}init(){const t=this.container,i=t.actualOptions.interactivity.modes.grab;i&&(t.retina.grabModeDistance=i.distance*t.retina.pixelRatio)}interact(){const t=this.container,i=t.actualOptions,n=i.interactivity;if(!n.modes.grab||!n.events.onHover.enable||t.interactivity.status!==k)return;const e=t.interactivity.mouse.position;if(!e)return;const o=t.retina.grabModeDistance;if(!o||o<P)return;const s=t.particles.quadTree.queryCircle(e,o,a=>this.isEnabled(a));for(const a of s){const m=a.getPosition(),c=L(m,e);if(c>o)continue;const l=n.modes.grab.links,b=l.opacity,d=b-c*b/o;if(d<=q)continue;const p=l.color??a.options.links?.color;if(!t.particles.grabLineColor&&p){const g=n.modes.grab.links;t.particles.grabLineColor=O(p,g.blink,g.consent)}const u=h(a,void 0,t.particles.grabLineColor);u&&M(t,a,u,d,e)}}isEnabled(t){const i=this.container,n=i.interactivity.mouse,e=(t?.interactivity??i.actualOptions.interactivity).events;return e.onHover.enable&&!!n.position&&C(G,e.onHover.mode)}loadModeOptions(t,...i){t.grab||(t.grab=new f);for(const n of i)t.grab.load(n?.grab)}reset(){}}export{x as Grabber};
