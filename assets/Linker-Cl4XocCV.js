import{C as y,R as g}from"./Ranges-CL-NOLLR.js";import{Links as b}from"./index-BhZOtxdU.js";import{P as z}from"./ParticlesInteractorBase-vfDeBun3.js";import{a7 as D,W as P}from"./index-DkBbFk0F.js";import"./OptionsColor-DJkwqiAo.js";const f=2;class M extends y{constructor(i,s,t,n){super(i,s,t),this.canvasSize=n,this.canvasSize={...n}}contains(i){const{width:s,height:t}=this.canvasSize,{x:n,y:e}=i;return super.contains(i)||super.contains({x:n-s,y:e})||super.contains({x:n-s,y:e-t})||super.contains({x:n,y:e-t})}intersects(i){if(super.intersects(i))return!0;const s=i,t=i,n={x:i.position.x-this.canvasSize.width,y:i.position.y-this.canvasSize.height};if(t.radius!==void 0){const e=new y(n.x,n.y,t.radius*f);return super.intersects(e)}else if(s.size!==void 0){const e=new g(n.x,n.y,s.size.width*f,s.size.height*f);return super.intersects(e)}return!1}}const w=2,O=1,d={x:0,y:0},q=0;function v(p,i,s,t,n){const{dx:e,dy:l,distance:r}=P(p,i);if(!n||r<=s)return r;const a={x:Math.abs(e),y:Math.abs(l)},c={x:Math.min(a.x,t.width-a.x),y:Math.min(a.y,t.height-a.y)};return Math.sqrt(c.x**w+c.y**w)}class B extends z{constructor(i){super(i),this._setColor=s=>{if(!s.options.links)return;const t=this.linkContainer,n=s.options.links;let e=n.id===void 0?t.particles.linksColor:t.particles.linksColors.get(n.id);if(e)return;const l=n.color;e=D(l,n.blink,n.consent),n.id===void 0?t.particles.linksColor=e:t.particles.linksColors.set(n.id,e)},this.linkContainer=i}clear(){}init(){this.linkContainer.particles.linksColor=void 0,this.linkContainer.particles.linksColors=new Map}interact(i){if(!i.options.links)return;i.links=[];const s=i.getPosition(),t=this.container,n=t.canvas.size;if(s.x<d.x||s.y<d.y||s.x>n.width||s.y>n.height)return;const e=i.options.links,l=e.opacity,r=i.retina.linksDistance??q,a=e.warp;let c;a?c=new M(s.x,s.y,r,n):c=new y(s.x,s.y,r);const C=t.particles.quadTree.query(c);for(const o of C){const h=o.options.links;if(i===o||!h?.enable||e.id!==h.id||o.spawning||o.destroyed||!o.links||i.links.some(k=>k.destination===o)||o.links.some(k=>k.destination===i))continue;const u=o.getPosition();if(u.x<d.x||u.y<d.y||u.x>n.width||u.y>n.height)continue;const x=v(s,u,r,n,a&&h.warp);if(x>r)continue;const m=(O-x/r)*l;this._setColor(i),i.links.push({destination:o,opacity:m})}}isEnabled(i){return!!i.options.links?.enable}loadParticlesOptions(i,...s){i.links||(i.links=new b);for(const t of s)i.links.load(t?.links)}reset(){}}export{B as Linker};
